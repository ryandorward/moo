{"version":3,"sources":["components/PaperSheet.js","index.js"],"names":["withStyles","theme","root","Object","objectSpread","mixins","gutters","paddingTop","spacing","unit","paddingBottom","props","classes","react_default","a","createElement","Paper_default","className","elevation","Typography_default","variant","component","title","body","Calclet","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","e","change","target","value","index","TextField_default","label","onChange","margin","fullWidth","React","Component","AddButton","_this2","handleClick","state","distance","onClick","setState","class","Button_default","Calculator","_this3","calclets","addCalclet","i","length","calclet","slice","push","timeTyped","pace","hms","split","HMStoSeconds","j","isNaN","secondsToHMS","id","src_Calclet","key","console","log","arr","GridListTile_default","renderCalclet","GridList_default","cols","cellHeight","Grid_default","container","justify","components_PaperSheet","renderCalclets","src_AddButton","seconds","hours","Math","floor","minutes","str","round","ReactDOM","render","src_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.f568c57e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nfunction PaperSheet(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      \n      <Paper className={classes.root} elevation={1}>\n        <Typography variant=\"h5\" component=\"h3\">\n          {props.title}\n        </Typography>\n        <Typography component=\"p\">\n          {props.body}\n        </Typography>\n      </Paper>\n    </div>\n  );\n}\n\nPaperSheet.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperSheet);","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport TextField from '@material-ui/core/TextField';\nimport PaperSheet from './components/PaperSheet.js';\nimport Button from '@material-ui/core/Button';\nimport './index.css';\n\n// centralize pace\n\n// make components that dynamically are built from Calclet. like <Calclet distance=\"42.2\"> for marathon\n// <Calclet distance=\"1.6\"> for mile pace\n// <Calclet distance=\"1\"> for 1km pace\n\nclass Calclet extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {    \n    this.props.change(e.target.value, this.props.index);\n  }\n\n  render () {  \n    const value = this.props.value;\n    return (\n      <div>              \n        <TextField       \n          label={this.props.label}                   \n          value= {value}        \n          onChange={this.handleChange} \n          margin=\"normal\"\n          variant=\"outlined\"\n          fullWidth = {true}\n        />                  \n      </div>   \n    );\n  }\n\n}\n\n\n\nclass AddButton extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleClick= this.handleClick.bind(this);\n    this.handleChange= this.handleChange.bind(this);\n\n    this.state = {      \n      distance: props.distance,\n    }\n  }\n\n  handleClick(e) {\n    this.props.onClick(this.state.distance);\n  }\n  handleChange(e) {\n    this.setState({\n      distance: e.target.value,      \n    })\n  }\n\n  render () {\n    return (\n      <div class=\"adder\">\n        <TextField \n          label=\"Distance to Add\"               \n          value= {this.state.distance}        \n          onChange={this.handleChange} \n          margin=\"normal\"\n          variant=\"outlined\"\n          fullWidth = {false}\n        />\n        <Button variant=\"outlined\" onClick = {this.handleClick} > \n          Add {this.state.distance}km\n        </Button>\n      </div>\n    );\n  }\n}\n\nclass Calculator extends React.Component {\n\n  calclets = [\n    {\n      distance: 1, \n      label: \"Pace 1km\",\n    },\n    {\n      distance: 1.60934, \n      label: \"Pace 1 mile\",\n    },\n    {\n      distance: 0.8, \n      label: \"800m\",\n    },  \n    {\n      distance: 10,          \n    },\n    {\n      distance: 42.195/2, \n      label: \"Half Marathon\"    \n    },\n    {\n      distance: 42.195, \n      label: \"Marathon\"    \n    },\n  \n  ];\n\n  constructor(props) {\n    super(props);\n    this.change = this.change.bind(this);\n    this.addCalclet = this.addCalclet.bind(this);\n\n    this.state = {      \n      calclets: [],\n    }\n\n    for (let i = 0; i < this.calclets.length; i++) {\n      let calclet = this.calclets[i];\n      this.state.calclets[i] = {\n        index: i,\n        distance: calclet.distance,        \n        value: '',\n      }\n    }\n    \n  } \n\n  addCalclet(distance) {\n    \n    var calclets = this.state.calclets.slice(); \n    calclets.push({\n      distance: distance,\n      index: calclets.length,\n      value: '',\n    });\n    \n    this.calclets.push({\n      distance: distance,\n    });\n    this.setState({\n      calclets: calclets,      \n    })       \n    \n  }\n\n  change(timeTyped, i) {   \n    var calclets = this.state.calclets.slice();    \n    calclets[i].value = timeTyped;    \n\n    const timeS = HMStoSeconds(timeTyped);    \n    var pace = timeS/calclets[i].distance;   \n\n    for (var j in calclets) {\n      if (j != i) {\n        if (isNaN(pace))\n          calclets[j].value = '';\n        else \n          calclets[j].value = secondsToHMS(pace*calclets[j].distance);                    \n      }\n    }\n    \n    this.setState({\n      calclets: calclets,      \n    })\n    \n  }\n\n  renderCalclet(id) {   \n    \n    return (\n      <Calclet\n        distance={this.calclets[id].distance}       \n        change={this.change}  \n        value={this.state.calclets[id].value}  \n        index={id} \n        key={id}      \n        label={this.calclets[id].label ? this.calclets[id].label : this.calclets[id].distance + \"km\"}\n      />\n    );\n  }\n\n  renderCalclets() {\n    console.log(this.state.calclets);\n    let arr = []    \n    for (var i = 0; i < this.state.calclets.length; i++) {\n      arr.push(<GridListTile> {this.renderCalclet(i)}</GridListTile> );\n    }    \n    return <GridList cols={3} cellHeight={80}> { arr }</GridList>;\n  }\n\n  render () {\n    return (\n      <div class=\"full-outer\">      \n        <div class = \"full-inner\">\n          <Grid container justify = \"left\">\n            <PaperSheet \n              title = \"Dr. Ward's famous multi-directional Pace Calculator\"\n              body = \"Type in the time in any field, all of the rest will calculate. All fields are live! Times should follow the format HH:MM:SS. Examples of valid times: 5:30, 45:20 or 1:59:59\"  \n            />     \n          </Grid>\n        \n          { this.renderCalclets() }   \n\n          <AddButton onClick = {this.addCalclet} distance = {9}/>\n     \n        </div>       \n      </div>\n    );\n  }\n\n}\n\nfunction secondsToHMS(seconds) {       \n    \n    var hours   = Math.floor(seconds / 3600);\n    var minutes = Math.floor((seconds- (hours * 3600)) / 60);\n    var seconds = Math.round(seconds - (hours * 3600) - (minutes * 60));\n\n    var str = \"\";\n    if (hours > 0) {     \n      str = hours + \":\"\n    }\n    if (hours > 0 || minutes > 0) {\n      if (minutes < 10 && hours > 0 ) {minutes = \"0\"+minutes}      \n        str = str + minutes + \":\";\n    }\n    if (seconds < 10) {seconds = \"0\"+seconds} \n    str = str + seconds;  \n    \n    return str;   \n\n}\n\nfunction HMStoSeconds(hms) { \n\n  var a = hms.split(':'); // split it at the colons\n\n  if (a.length > 3) return;\n  if (a.length == 3)\n    // minutes are worth 60 seconds. Hours are worth 60 minutes.\n    return (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);\n  if (a.length == 2)\n    return (+a[0]) * 60 + (+a[1]);\n  if (a.length == 3)\n    return (+a[0]);\n\n}\n\n// ========================================\n\nReactDOM.render(\n  <Calculator />,\n  document.getElementById('root')\n);"],"sourceRoot":""}