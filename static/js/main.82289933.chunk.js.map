{"version":3,"sources":["index.js"],"names":["Calclet","props","_this","Object","_Users_ryandorward_react_rcalc_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_ryandorward_react_rcalc_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_ryandorward_react_rcalc_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","marathonDistance","state","onChangePace","event","paceSeconds","HMStoSeconds","target","value","marathonSeconds","marathonTimeTyped","secondsToHMS","setState","marathonTime","pace","paceTyped","onChangeMarathonTime","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_10___default","id","label","onChange","bind","margin","variant","React","Component","Calculator","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_7___default","color","position","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_9___default","typed","seconds","hours","Math","floor","minutes","str","round","hms","split","length","ReactDOM","render","document","getElementById"],"mappings":"qRAcMA,qBAIJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAHRQ,iBAAmB,KAIjBP,EAAKQ,MAAQ,CACXC,aAAc,SAASC,GAErB,IAAIC,EAAcC,EAAaF,EAAMG,OAAOC,OACxCC,EAAkBZ,KAAKI,iBAAmBI,EAC1CK,EAAoBC,EAAaF,GACZ,OAArBC,IACFA,EAAoB,IAEtBb,KAAKe,SAAS,CACZC,aAAcJ,EACdC,kBAAmBA,EACnBI,KAAMT,EACNU,UAAWX,EAAMG,OAAOC,SAG5BQ,qBAAsB,SAASZ,GAE7B,IAAIK,EAAkBH,EAAaF,EAAMG,OAAOC,OAC5CH,EAAcI,EAAgBZ,KAAKI,iBACnCc,EAAYJ,EAAaN,GACZ,OAAbU,IACFA,EAAY,IAEdlB,KAAKe,SAAS,CACZC,aAAcJ,EACdC,kBAAmBN,EAAMG,OAAOC,MAChCM,KAAMT,EACNU,UAAWA,KAIfD,KAAM,EACNC,UAAW,GACXF,aAAc,EACdH,kBAAmB,IArCJhB,wEA6CjB,OACEuB,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,GAAG,gBACHC,MAAM,yBACNd,MAAQX,KAAKK,MAAMa,UACnBQ,SAAU1B,KAAKK,MAAMC,aAAaqB,KAAK3B,MACvC4B,OAAO,SACPC,QAAQ,aAEVT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,GAAG,yBACHC,MAAM,gBACNd,MAAQX,KAAKK,MAAMQ,kBACnBa,SAAU1B,KAAKK,MAAMc,qBAAqBQ,KAAK3B,MAC/C4B,OAAO,SACPC,QAAQ,qBApEIC,IAAMC,YA4EtBC,mLAGF,OACEZ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQa,MAAM,UAAUC,SAAS,UAC/Bf,EAAAC,EAAAC,cAACc,EAAAf,EAAD,KACED,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CACIQ,QAAQ,QACRK,MAAM,WAFV,wDAQJd,EAAAC,EAAAC,cAAC3B,EAAD,CACE+B,SAAW,kBAAM,SAASnB,GACxBP,KAAKe,SAAS,CAACuB,MAAO/B,EAAMG,OAAOC,oBAjBpBmB,IAAMC,WA0B/B,SAASjB,EAAayB,GAElB,IAAIC,EAAUC,KAAKC,MAAMH,EAAU,MAC/BI,EAAUF,KAAKC,OAAOH,EAAkB,KAARC,GAAiB,IAGjDI,GAFAL,EAAUE,KAAKI,MAAMN,EAAmB,KAARC,EAA2B,GAAVG,GAE3C,IAWV,OAVIH,EAAQ,IACVI,EAAMJ,EAAQ,MAEZA,EAAQ,GAAKG,EAAU,KACrBA,EAAU,IAAMH,EAAQ,IAAKG,EAAU,IAAIA,GAC7CC,EAAMA,EAAMD,EAAU,KAEtBJ,EAAU,KAAKA,EAAU,IAAIA,GACjCK,GAAYL,EAMhB,SAAS9B,EAAaqC,GAEpB,IAAIzB,EAAIyB,EAAIC,MAAM,KAElB,KAAI1B,EAAE2B,OAAS,GACf,OAAgB,GAAZ3B,EAAE2B,OAEa,IAAR3B,EAAE,GAAW,GAAe,IAARA,EAAE,KAAaA,EAAE,GAChC,GAAZA,EAAE2B,OACa,IAAR3B,EAAE,KAAaA,EAAE,GACZ,GAAZA,EAAE2B,QACK3B,EAAE,QADb,EAOF4B,IAASC,OACP9B,EAAAC,EAAAC,cAACU,EAAD,MACAmB,SAASC,eAAe","file":"static/js/main.82289933.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TypoGraphy from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport './index.css';\n\n// centralize pace\n\n// make components that dynamically are built from Calclet. like <Calclet distance=\"42.2\"> for marathon\n// <Calclet distance=\"1.6\"> for mile pace\n// <Calclet distance=\"1\"> for 1km pace\n\nclass Calclet extends React.Component {\n\n  marathonDistance = 42.2;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      onChangePace: function(event) {   \n        \n        let paceSeconds = HMStoSeconds(event.target.value);\n        let marathonSeconds = this.marathonDistance * paceSeconds;\n        let marathonTimeTyped = secondsToHMS(marathonSeconds);\n        if (marathonTimeTyped == \"NaN\")\n          marathonTimeTyped = \"\";\n        \n        this.setState({\n          marathonTime: marathonSeconds,\n          marathonTimeTyped: marathonTimeTyped,\n          pace: paceSeconds,\n          paceTyped: event.target.value,\n        });\n      }, \n      onChangeMarathonTime: function(event) {     \n        \n        let marathonSeconds = HMStoSeconds(event.target.value);\n        let paceSeconds = marathonSeconds/this.marathonDistance;\n        let paceTyped = secondsToHMS(paceSeconds);\n        if (paceTyped == \"NaN\")\n          paceTyped = \"\";\n        \n        this.setState({\n          marathonTime: marathonSeconds,\n          marathonTimeTyped: event.target.value,\n          pace: paceSeconds,\n          paceTyped: paceTyped,\n        });       \n      },\n      \n      pace: 0, // in seconds\n      paceTyped: '', \n      marathonTime: 0, // in seconds\n      marathonTimeTyped: '',\n    }\n\n   \n  } \n\n  render () {\n    \n    return (    \n      <div>              \n\n        <TextField\n          id=\"outlined-pace\"\n          label=\"Pace (min/km eg. 5:06)\"        \n          value= {this.state.paceTyped}\n          onChange={this.state.onChangePace.bind(this)} \n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n        <br/>         \n\n        <TextField\n          id=\"outlined-marathon-time\"\n          label=\"Marathon Time\"        \n          value= {this.state.marathonTimeTyped} \n          onChange={this.state.onChangeMarathonTime.bind(this)}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n\n      </div> \n    )\n  }\n}\n\nclass Calculator extends React.Component {\n\n  render () {\n    return (\n      <div>\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar>\n          <TypoGraphy \n              variant=\"title\"\n              color=\"inherit\">\n            Dr. Ward's Bi-directional Marathon Pace Calculator\n          </TypoGraphy>\n        </Toolbar>\n      </AppBar>      \n\n      <Calclet\n        onChange ={()=>  function(event) {\n          this.setState({typed: event.target.value});\n        }}      \n      />\n      </div>\n    );\n  }\n\n}\n\nfunction secondsToHMS(seconds) {       \n    \n    var hours   = Math.floor(seconds / 3600);\n    var minutes = Math.floor((seconds- (hours * 3600)) / 60);\n    var seconds = Math.round(seconds - (hours * 3600) - (minutes * 60));\n\n    var str = \"\";\n    if (hours > 0) {     \n      str = hours + \":\"\n    }\n    if (hours > 0 || minutes > 0) {\n      if (minutes < 10 && hours > 0 ) {minutes = \"0\"+minutes}      \n        str = str + minutes + \":\";\n    }\n    if (seconds < 10) {seconds = \"0\"+seconds} \n    str = str + seconds;  \n    \n    return str;   \n\n}\n\nfunction HMStoSeconds(hms) { \n\n  var a = hms.split(':'); // split it at the colons\n\n  if (a.length > 3) return;\n  if (a.length == 3)\n    // minutes are worth 60 seconds. Hours are worth 60 minutes.\n    return (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);\n  if (a.length == 2)\n    return (+a[0]) * 60 + (+a[1]);\n  if (a.length == 3)\n    return (+a[0]);\n\n}\n\n// ========================================\n\nReactDOM.render(\n  <Calculator />,\n  document.getElementById('root')\n);"],"sourceRoot":""}